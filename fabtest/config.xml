<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This is for Fabrice MOYEN.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>boeBoxes</name>
          <description>Boeblingen systems</description>
          <defaultValue>tul2 tul3</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>mopBoxes</name>
          <description>Montpellier systems</description>
          <defaultValue>marennes antipode lewen05 yob594 brahma</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

#######################################
# Initial check

echo -e &quot;Who am I ?: \c&quot;; whoami
id

echo; echo -e &quot;Where ?: \c&quot;; pwd

echo; echo &quot;Homedir:&quot;
cd ~
pwd

#echo; echo &quot;.ssh ?:&quot;
#ls -la .ssh

#echo; cat .ssh/id_rsa.pub

#ssh -T -ai ~/.ssh/id_rsa git@github.com

#echo; echo &quot;authorized_keys:&quot;
#cat .ssh/authorized_keys

echo &quot;#####################################&quot;

#######################################
# Jobs investigation &amp; backup

#JobsDir=&quot;/var/lib/jenkins/jobs&quot;
#Job=&quot;SNAP_SIM_matrix&quot;
#Workspace=$PWD

#echo -e &quot;--&gt; User: \c&quot;
#whoami
#echo -e &quot;--&gt; Homedir: \c&quot;
#echo $HOME
#echo -e &quot;--&gt; Workspace: \c&quot;
#echo $Workspace
#echo
#echo &quot;--&gt; jobs directory $JobsDir&quot;
#ls -la $JobsDir
#echo
#cd $JobsDir; find . -name config.xml -exec ls -latr {} +;
#echo
#du -sh $JobsDir

#echo
#echo &quot;--&gt; Job $Job&quot;
#du -sh $JobsDir/$Job

#cd $JobsDir
#tar czf $Workspace/$Job.tar.gz ./$Job
#ls -la $Workspace/$Job.tar.gz
#sshpass -p XXX scp ./$Job.tar.gz fmoyen@10.3.76.10:/home/fmoyen

#######################################
# openVPN investigation

#ps -ef | grep &quot;fpga_&quot; | grep -v grep
#ping -c 1 10.3.76.254
#ping -c 1 10.7.12.50

#######################################
# SSH &amp; AFS investigation

#echo
#echo &quot;## ~/.ssh/config&quot;
#ls -lad ~/.ssh/config
#cat ~/.ssh/config
#echo
#echo &quot;ssh hostname onto Brahma testing:&quot;
#export SSHPASS=XXXX
#sshpass -e ssh -o afstokenpassing=no fmoyen@10.3.76.22 hostname

#echo
#echo &quot;## SSH TEST&quot;
#ssh lewen05 hostname

#RC=0;ssh lewen05 ping localhost -c1 &gt;/dev/null 2&gt;&amp;1 || RC=$? # cannot reach lewen05
#if [ $RC != &quot;0&quot; ]; then :
#  echo &quot;lewen05 not reachable, retry VPN connection&quot;
#else
#  echo &quot;ssh lewen05 OK&quot;
#fi

#######################################
# SSH &amp; AFS investigation

TESTBOXES=( ${boeBoxes[*]} ${mopBoxes[*]}) # init array of systems
echo &quot;------------------------------------&quot;
echo &quot;~/.ssh/config&quot;
echo
cat ~/.ssh/config
echo &quot;------------------------------------&quot;

RC=0;ssh dim1 ping localhost -c1 &gt;/dev/null 2&gt;&amp;1 ||RC=$?
if [ $RC == &quot;0&quot; ]; then echo &quot;dim1 ping ok&quot;; else echo &quot;dim1 not reachable&quot;;exit 1;fi
      
for box in &quot;${TESTBOXES[@]}&quot;;do
      
 if [[ ${mopBoxes[*]} =~ $box ]]
 then
   # $box is a Montpellier server
   RC=0;ssh $box ping localhost -c1 &gt;/dev/null 2&gt;&amp;1 || RC=$?
 else
   # $box is a Boeblingen server, accessible through dim1 system
   RC=0;ssh dim1 ping $box -c1 &gt;/dev/null 2&gt;&amp;1 || RC=$?
 fi
      
 if [ $RC == &quot;0&quot; ]; then echo &quot;$box ping ok&quot;; else echo &quot;$box not reachable&quot;;continue;fi
done</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>